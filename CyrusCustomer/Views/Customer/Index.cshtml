@model AssignViewModel

@{
    ViewData["Title"] = "Customer List";
    var successMessage = TempData["SuccessMessage"] as string;

}
<h2 style="font-family: " Dosis", sans-serif">@ViewData["Title"]</h2>


<!-- Alert for Save Success -->
<div id="alertContainer" class="alert alert-success d-none" role="alert">
    Save successful!
</div>



@if (User.Identity.Name == "admin@Cyrus.com")

{
<p>
    <a asp-action="Create" style="text-decoration: none;" class="btn btn-dark">Create New</a>
    <a asp-action="Upload" class="btn btn-primary" style="margin-left: 10px;">Upload Excel</a>

        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Dosis:wght@200..800&display=swap" rel="stylesheet">

  @*   @using (Html.BeginForm("DeleteAll", "Customer", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete all customer data?');">
            Delete All Customer Data
        </button>
    } *@
</p>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            const alertContainer = document.getElementById('alertContainer');
            alertContainer.classList.remove('d-none');
            alertContainer.innerText = successMessage; // Set the success message text
            setTimeout(() => {
                alertContainer.classList.add('d-none');
            }, 4000);
        }
    });
</script>


@using (Html.BeginForm("Index", "Customer", FormMethod.Get))
{
    <div class="form-group pb-3">
        <input type="text" name="searchString" class="form-control" placeholder="Search by Customer Name, Tax ID, Year, Month, Status....." value="@Model.SearchString" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
    <a href="@Url.Action("Index", "Customer")" class="btn btn-secondary">Reset</a>

}



<!-- Customer List with Checkboxes -->
<form asp-action="AssignCustomers" method="post">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>تاريخ الفاتورة (السنوي)</th>
                <th>تاريخ الفاتورة (الشهر)</th>
                <th>سجل ضريبي</th>
                <th>إسم الشركة</th>
                <th>عدد الفروع</th>
                <th>تاريخ التحديث</th>
                <th>Updated</th>
                <th>Status</th>
                @if (User.Identity.Name == "admin@Cyrus.com")
                {



                    <th>Select <br /> CST.</th>
                    <th>Assigned For</th>
                }
           
                
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.PaginatedCustomers)
            {
                <tr>
                    <td>@item.Year</td>
                    <td>@item.Month</td>
                    <td>@item.TaxId</td>
                    <td>@item.Name</td>
                    <td>@item.CountOfBranches</td>
                    <td>@item.UpdateDate</td>
                    @* <td>@item.By</td> *@
                    <td>
                        <input type="checkbox" class="form-check-input me-2" disabled @(item.IsUpdated ? "checked" : "") />
                    </td>
                 
                    <td>@item.Status.ToString()</td>
                    <td>
                        <div class="d-flex align-items-center">
                            @if (User.Identity.Name == "admin@Cyrus.com")
                            {
                                <input type="checkbox" name="SelectedCustomerIds" class="form-check-input me-2" value="@item.Id" />
                                @* <a asp-action="Edit" class="btn btn-success btn-sm me-2" asp-route-id="@item.Id">Edit</a> *@
                            }

                            <a asp-action="Details" class="btn btn-dark btn-sm" asp-route-id="@item.Id">Details</a>
                        </div>
                    </td>

                    <td>
                        @if (User.Identity.Name == "admin@Cyrus.com")
                        {
                            @if (Model.CustomerAssignments.ContainsKey(item.Id))
                            {
                                <ul>
                                    @foreach (var userId in Model.CustomerAssignments[item.Id])
                                    {
                                        <li>@Model.Users.FirstOrDefault(u => u.Value == userId)?.Text</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>No users assigned</p>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (User.Identity.Name == "admin@Cyrus.com")

    {
       
        @* <form asp-action="AssignCustomers" method="post"> *@
            @if (User.Identity.Name == "admin@Cyrus.com")
            {
                <div class="form-group">
                    <!-- Dropdown to select a user -->
                    <label for="SelectUserId">Select User</label>
                    <select id="SelectUserId" name="Id" class="form-control">
                        <option value="">-- Select User --</option>
                        @foreach (var user in Model.Users)
                        {
                            if (user.Value == Model.SelectedUserId)
                            {
                                <option value="@user.Value" selected="selected">@user.Text</option>
                            }
                            else
                            {
                                <option value="@user.Value">@user.Text</option>
                            }
                        }
                    </select>
                </div>
            }
            <button type="submit" class="btn btn-success mt-3">Assign</button>
        @* </form> *@
    }

</form>

<!-- Displaying X customers from Y total -->
<div class="text-center mb-3">
    <p style="font-family: Dubai;">Displaying @Model.PaginatedCustomers.Count customers from @Model.PaginatedCustomers.TotalCount total customers</p>
</div>
<!-- Using JQuery -->

@section Scripts 
{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#assignButton').click(function () {
                var selectedUserId = $('#SelectedUserId').val();
                var selectedCustomerIds = $('input[name="SelectedCustomerIds"]:checked').map(function () {
                    return $(this).val();
                }).get();

                $.ajax({
                    url: '@Url.Action("AssignCustomers", "Customer")',
                    type: 'POST',
                    data: {
                        SelectedUserId: selectedUserId,
                        SelectedCustomerIds: selectedCustomerIds
                    },
                    success: function (response) {
                        alert('Customers assigned successfully!');
                        window.location.href = '@Url.Action("Index", "Customer")'; 
                    },
                    error: function () {
                        alert('An error occurred while assigning customers.');
                    }
                });
            });
        });
    </script>
    }
    <!-- end of Jquery -->




<!-- Pagination Controls -->

<nav aria-label="Page navigation">
    <ul class="pagination custom-pagination justify-content-center">
        <!-- Previous Page Link -->
        <li class="page-item @(Model.PaginatedCustomers.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PaginatedCustomers.PageIndex - 1)"
               asp-route-searchString="@Model.SearchString" asp-route-selectedUserId="@Model.SelectedUserId" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        <!-- Page Numbers -->
        @for (int i = 1; i <= Model.PaginatedCustomers.TotalPages; i++)
        {
            if (i == 1 || i == Model.PaginatedCustomers.TotalPages || (i >= Model.PaginatedCustomers.PageIndex - 2 && i <= Model.PaginatedCustomers.PageIndex + 2))
            {
                <li class="page-item @(i == Model.PaginatedCustomers.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i"
                       asp-route-searchString="@Model.SearchString" asp-route-selectedUserId="@Model.SelectedUserId">@i</a>
                </li>
            }
            else if (i == Model.PaginatedCustomers.PageIndex - 3 || i == Model.PaginatedCustomers.PageIndex + 3)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
        }

        <!-- Next Page Link -->
        <li class="page-item @(Model.PaginatedCustomers.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PaginatedCustomers.PageIndex + 1)"
               asp-route-searchString="@Model.SearchString" asp-route-selectedUserId="@Model.SelectedUserId" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
<!-- Page X from Y -->
<div class="text-center mb-3">
    <p>Page @Model.PaginatedCustomers.PageIndex of @Model.PaginatedCustomers.TotalPages</p>
</div>



<!-- Custom CSS Styles -->
<style>


    h2 {
        color: #424242;
        font-size: 28px;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

        .table th, .table td {
            padding: 8px;
            border: 1px solid #ddd;
        }

    /*
        .table th {
            background-color: #f1f1f1;
            text-align: left;
        }

       .table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        } */

    .custom-btn-dark {
        background-color: #37474f;
        color: white;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .custom-btn-primary {
        background-color: #26a69a;
        color: white;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .custom-btn-secondary {
        background-color: #78909c;
        color: white;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .custom-btn-success {
        background-color: #43a047;
        color: white;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

        .custom-btn-dark:hover, .custom-btn-primary:hover, .custom-btn-secondary:hover, .custom-btn-success:hover {
            opacity: 0.85;
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
        }

    .custom-input {
        border-radius: 5px;
        border: 1px solid #cfd8dc;
        padding: 10px;
        background-color: #ffffff;
    }

    .custom-select {
        border-radius: 5px;
        border: 1px solid #cfd8dc;
        padding: 10px;
        background-color: #ffffff;
    }

    .custom-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
        background-color: #ffffff; /* White table background */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .custom-table-header {
        background-color: #37474f;
        color: white;
    }

    .custom-table td, .custom-table th {
        padding: 12px;
        border-bottom: 1px solid #e0e0e0;
    }

    .custom-pagination .page-item .page-link {
        background-color: #37474f;
        color: white;
        border: 1px solid #37474f;
        margin: 0 5px;
        border-radius: 5px;
    }

    .custom-pagination .page-item.active .page-link {
        background-color: white;
        color: #424242;
        border-color: #424242;
    }

    .form-check-input {
        margin-left: 0;
        margin-right: 5px;
    }

    .form-group {
        margin-bottom: 20px;
    }
</style>

